{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/print.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert-is-nan' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {number} [options.p] - probability under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0dN2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( '0dN8h', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( '0dN2i', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'p' ) ) {\n\t\topts.p = options.p;\n\t\tif ( !isNumber( opts.p ) || isnan( opts.p ) ) {\n\t\t\treturn new TypeError( format( '0dN8h', 'p', opts.p ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar roundn = require( '@stdlib/math-base-special-roundn' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '0dN3X', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( '0dN3b', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( '0dN30', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True correlation coefficient is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\nvar isNumberArray = require( '@stdlib/assert-is-number-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' );\nvar betaQuantile = require( '@stdlib/stats-base-dists-beta-quantile' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar ceil = require( '@stdlib/math-base-special-ceil' );\nvar binomialCDF = require( '@stdlib/stats-base-dists-binomial-cdf' );\nvar binomialPMF = require( '@stdlib/stats-base-dists-binomial-pmf' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// VARIABLES //\n\nvar RELATIVE_ERROR = 1+1e-07;\n\n\n// FUNCTIONS //\n\n/**\n* Calculates the lower endpoint of a confidence interval.\n*\n* @private\n* @param {NonNegativeInteger} x - number of successes\n* @param {NonNegativeInteger} n - total number of observations\n* @param {number} alpha - significance level\n* @returns {number} lower endpoint\n*/\nfunction lower( x, n, alpha ) {\n\treturn ( x === 0 ) ? 0 : betaQuantile( alpha, x, n - x + 1 );\n}\n\n/**\n* Calculates the upper endpoint of a confidence interval.\n*\n* @private\n* @param {NonNegativeInteger} x - number of successes\n* @param {NonNegativeInteger} n - total number of observations\n* @param {number} alpha - significance level\n* @returns {number} upper endpoint\n*/\nfunction upper( x, n, alpha ) {\n\treturn ( x === n ) ? 1 : betaQuantile( 1 - alpha, x + 1, n - x );\n}\n\n\n// MAIN //\n\n/**\n* Computes an exact test for the success probability in a Bernoulli experiment.\n*\n* @param {(NonNegativeInteger|Array)} x - number of successes or two-element array with successes and failures\n* @param {NonNegativeInteger} [n] - total number of observations\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {Probability} [options.p=0.5] - success probability under H0\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @returns {Object} test results\n*/\nfunction binomialTest() {\n\tvar alpha;\n\tvar opts;\n\tvar cint;\n\tvar pval;\n\tvar stat;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar d;\n\tvar m;\n\tvar n;\n\tvar p;\n\tvar x;\n\tvar y;\n\tvar i;\n\n\topts = {};\n\tif ( isNumberArray( arguments[ 0 ] ) ) {\n\t\tx = arguments[ 0 ];\n\t\tif ( x.length !== 2 ) {\n\t\t\tthrow new Error( format( 'invalid argument. An array argument must contain two elements. Value: `%s`.', x ) );\n\t\t}\n\t\tn = x[ 1 ] + x[ 0 ];\n\t\tx = x[ 0 ];\n\t\tif ( arguments[ 1 ] ) {\n\t\t\terr = validate( opts, arguments[ 1 ] );\n\t\t}\n\t} else {\n\t\tx = arguments[ 0 ];\n\t\tn = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( x ) ) {\n\t\t\tthrow new TypeError( format( '0dN9r', x ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( format( '0dN2V', n ) );\n\t\t}\n\t\tif ( x > n ) {\n\t\t\tthrow new TypeError( format( 'invalid arguments. Number of successes cannot be larger than the total number of observations. x: `%u`. n: `%u`.' ) );\n\t\t}\n\t\tif ( arguments[ 2 ] ) {\n\t\t\terr = validate( opts, arguments[ 2 ] );\n\t\t}\n\t}\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.', 'alpha', alpha ) );\n\t}\n\tif ( opts.p === void 0 ) {\n\t\tp = 0.5;\n\t} else {\n\t\tp = opts.p;\n\t}\n\tif ( p < 0.0 || p > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` option must be a probability. Option: `%f`.', 'p', p ) );\n\t}\n\n\talt = opts.alternative || 'two-sided';\n\tstat = x / n;\n\tswitch ( alt ) {\n\tcase 'less':\n\t\tpval = binomialCDF( x, n, p );\n\t\tcint = [ 0.0, upper( x, n, alpha ) ];\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - binomialCDF( x - 1, n, p );\n\t\tcint = [ lower( x, n, alpha ), 1.0 ];\n\t\tbreak;\n\tcase 'two-sided':\n\t\td = binomialPMF( x, n, p );\n\t\tm = n * p;\n\t\tif ( x === m ) {\n\t\t\tpval = 1;\n\t\t} else if ( x < m ) {\n\t\t\ty = 0;\n\t\t\tfor ( i = ceil( m ); i <= n; i++ ) {\n\t\t\t\tif ( binomialPMF( i, n, p ) <= d * RELATIVE_ERROR ) {\n\t\t\t\t\ty += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpval = binomialCDF(x, n, p) + ( 1 - binomialCDF(n - y, n, p ) );\n\t\t} else {\n\t\t\ty = 0;\n\t\t\tfor ( i = 0; i <= floor( m ); i++ ) {\n\t\t\t\tif ( binomialPMF( i, n, p ) <= d * RELATIVE_ERROR ) {\n\t\t\t\t\ty += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpval = binomialCDF( y-1, n, p ) + ( 1 - binomialCDF( x-1, n, p ) );\n\t\t}\n\t\tcint = [ lower( x, n, alpha/2.0 ), upper( x, n, alpha/2.0 ) ];\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( '0dN3t', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'nullValue', p );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'method', 'Exact binomial test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomialTest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an exact test for the success probability in a Bernoulli experiment.\n*\n* @module @stdlib/stats-binomial-test\n*\n* @example\n* var binomialTest = require( '@stdlib/stats-binomial-test' );\n*\n* var out = binomialTest( 682, 925 );\n* // returns {...}\n*\n* out = binomialTest( 682, 925, {\n*     'p': 0.75,\n*     'alpha': 0.05\n* });\n* // returns {...}\n*/\n\n// MODULES //\n\nvar binomialTest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = binomialTest;\n"],"names":["isNumber","require$$0","isPrimitive","isObject","require$$1","isString","require$$2","isnan","require$$3","hasOwnProp","require$$4","format","require$$5","validate_1","opts","options","alpha","TypeError","alternative","p","isPositiveInteger","isBoolean","roundn","setReadOnly","isNumberArray","isNonNegativeInteger","betaQuantile","floor","ceil","binomialCDF","require$$6","binomialPMF","require$$7","require$$8","validate","require$$9","print","decision","dgts","str","arguments","length","digits","this","method","nullValue","pValue","statistic","ci","rejected","lower","x","n","upper","lib","cint","pval","stat","alt","err","out","d","m","y","i","Error","RangeError","join"],"mappings":"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"}