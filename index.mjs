// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-beta-quantile@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ceil@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-cdf@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-pmf@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var j=d.isPrimitive,b=m,g=p.isPrimitive,w=h,x=v,y=l;var E=function(e,t){return b(t)?x(t,"alpha")&&(e.alpha=t.alpha,!j(e.alpha)||w(e.alpha))?new TypeError(y("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha)):x(t,"alternative")&&(e.alternative=t.alternative,!g(e.alternative))?new TypeError(y("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative)):x(t,"p")&&(e.p=t.p,!j(e.p)||w(e.p))?new TypeError(y("invalid option. `%s` option must be a number. Option: `%s`.","p",e.p)):null:new TypeError(y("invalid argument. Options argument must be an object. Value: `%s`.",t))},V=u,T=m,O=c.isPrimitive,k=v,P=f,R=l;var q=e,F=t,I=i,M=s,A=n,D=r,z=a,B=o,C=l,G=E,H=function(e){var t,i,s;if(i=4,t=!0,arguments.length>0){if(!T(e))throw new TypeError(R("invalid argument. First argument must be an options object. Value: `%s`.",e));if(k(e,"digits")){if(!V(e.digits))throw new TypeError(R("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));i=e.digits}if(k(e,"decision")){if(!O(e.decision))throw new TypeError(R("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));t=e.decision}}switch(s="",s+=this.method,s+="\n\n",s+="Alternative hypothesis: ",s+="True correlation coefficient is ",this.alternative){case"less":s+="less than ";break;case"greater":s+="greater than ";break;default:s+="not equal to "}return s+=this.nullValue,s+="\n\n",s+="    pValue: "+P(this.pValue,-i)+"\n",s+="    statistic: "+P(this.statistic,-i)+"\n",s+="    "+100*(1-this.alpha)+"% confidence interval: ["+P(this.ci[0],-i)+","+P(this.ci[1],-i)+"]",s+="\n\n",t&&(s+="Test Decision: ",this.rejected?s+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":s+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",s+="\n"),s};function J(e,t,i){return 0===e?0:M(i,e,t-e+1)}function K(e,t,i){return e===t?1:M(1-i,e+1,t-e)}var L=function(){var e,t,i,s,n,r,a,o,l,d,m,p,h,v,u;if(t={},F(arguments[0])){if(2!==(h=arguments[0]).length)throw new Error(C("invalid argument. If provided an array, it must have two elements. Value: `%s`.",h));m=h[1]+h[0],h=h[0],arguments[1]&&(a=G(t,arguments[1]))}else{if(m=arguments[1],!I(h=arguments[0]))throw new TypeError(C("invalid argument. Must provide a nonnegative integer or a two-element array. Value: `%s`.",h));if(!I(m))throw new TypeError(C("invalid argument. Must provide a nonnegative integer. Value: `%s`.",m));if(h>m)throw new TypeError(C("invalid arguments. `x` cannot be larger than `n`. `x: %u, n: %u`."));arguments[2]&&(a=G(t,arguments[2]))}if(a)throw a;if((e=void 0===t.alpha?.05:t.alpha)<0||e>1)throw new RangeError(C("invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `%f`.",e));if((p=void 0===t.p?.5:t.p)<0||p>1)throw new RangeError(C("invalid argument. Option `%s` must be a probability. Value: `%f`.","p",p));switch(n=h/m,r=t.alternative||"two-sided"){case"less":s=z(h,m,p),i=[0,K(h,m,e)];break;case"greater":s=1-z(h-1,m,p),i=[J(h,m,e),1];break;case"two-sided":if(l=B(h,m,p),h===(d=m*p))s=1;else if(h<d){for(v=0,u=D(d);u<=m;u++)B(u,m,p)<=1.0000001*l&&(v+=1);s=z(h,m,p)+(1-z(m-v,m,p))}else{for(v=0,u=0;u<=A(d);u++)B(u,m,p)<=1.0000001*l&&(v+=1);s=z(v-1,m,p)+(1-z(h-1,m,p))}i=[J(h,m,e/2),K(h,m,e/2)];break;default:throw new Error(C("Invalid option. `alternative` must be either `two-sided`, `less`, or `greater`. Value: `%s`.",r))}return q(o={},"rejected",s<=e),q(o,"alpha",e),q(o,"pValue",s),q(o,"statistic",n),q(o,"ci",i),q(o,"nullValue",p),q(o,"alternative",r),q(o,"method","Exact binomial test"),q(o,"print",H),o};export{L as default};
//# sourceMappingURL=index.mjs.map
