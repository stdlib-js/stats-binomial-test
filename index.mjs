// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-beta-quantile@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ceil@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-cdf@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-pmf@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.1.0-esm/index.mjs";function j(e,t){return p(t)?v(t,"alpha")&&(e.alpha=t.alpha,!d(e.alpha)||h(e.alpha))?new TypeError(l("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha)):v(t,"alternative")&&(e.alternative=t.alternative,!m(e.alternative))?new TypeError(l("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative)):v(t,"p")&&(e.p=t.p,!d(e.p)||h(e.p))?new TypeError(l("invalid option. `%s` option must be a number. Option: `%s`.","p",e.p)):null:new TypeError(l("invalid argument. Options argument must be an object. Value: `%s`.",t))}function b(e){var t,i,s;if(i=4,t=!0,arguments.length>0){if(!p(e))throw new TypeError(l("invalid argument. First argument must be an object. Value: `%s`.",e));if(v(e,"digits")){if(!c(e.digits))throw new TypeError(l("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));i=e.digits}if(v(e,"decision")){if(!u(e.decision))throw new TypeError(l("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));t=e.decision}}switch(s="",s+=this.method,s+="\n\n",s+="Alternative hypothesis: ",s+="True correlation coefficient is ",this.alternative){case"less":s+="less than ";break;case"greater":s+="greater than ";break;default:s+="not equal to "}return s+=this.nullValue,s+="\n\n",s+="    pValue: "+f(this.pValue,-i)+"\n",s+="    statistic: "+f(this.statistic,-i)+"\n",s+="    "+100*(1-this.alpha)+"% confidence interval: ["+f(this.ci[0],-i)+","+f(this.ci[1],-i)+"]",s+="\n\n",t&&(s+="Test Decision: ",this.rejected?s+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":s+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",s+="\n"),s}function g(e,t,i){return 0===e?0:s(i,e,t-e+1)}function w(e,t,i){return e===t?1:s(1-i,e+1,t-e)}function x(){var s,d,p,m,h,v,c,u,f,x,y,E,T,V,O;if(d={},t(arguments[0])){if(2!==(T=arguments[0]).length)throw new Error(l("invalid argument. An array argument must contain two elements. Value: `%s`.",T));y=T[1]+T[0],T=T[0],arguments[1]&&(c=j(d,arguments[1]))}else{if(y=arguments[1],!i(T=arguments[0]))throw new TypeError(l("invalid argument. Must provide a nonnegative integer or a two-element array. Value: `%s`.",T));if(!i(y))throw new TypeError(l("invalid argument. Must provide a nonnegative integer. Value: `%s`.",y));if(T>y)throw new TypeError(l("invalid arguments. Number of successes cannot be larger than the total number of observations. x: `%u`. n: `%u`."));arguments[2]&&(c=j(d,arguments[2]))}if(c)throw c;if((s=void 0===d.alpha?.05:d.alpha)<0||s>1)throw new RangeError(l("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",s));if((E=void 0===d.p?.5:d.p)<0||E>1)throw new RangeError(l("invalid option. `%s` option must be a probability. Option: `%f`.","p",E));switch(h=T/y,v=d.alternative||"two-sided"){case"less":m=a(T,y,E),p=[0,w(T,y,s)];break;case"greater":m=1-a(T-1,y,E),p=[g(T,y,s),1];break;case"two-sided":if(f=o(T,y,E),T===(x=y*E))m=1;else if(T<x){for(V=0,O=r(x);O<=y;O++)o(O,y,E)<=1.0000001*f&&(V+=1);m=a(T,y,E)+(1-a(y-V,y,E))}else{for(V=0,O=0;O<=n(x);O++)o(O,y,E)<=1.0000001*f&&(V+=1);m=a(V-1,y,E)+(1-a(T-1,y,E))}p=[g(T,y,s/2),w(T,y,s/2)];break;default:throw new Error(l('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"alternative",["two-sided","less","greater"].join('", "'),v))}return e(u={},"rejected",m<=s),e(u,"alpha",s),e(u,"pValue",m),e(u,"statistic",h),e(u,"ci",p),e(u,"nullValue",E),e(u,"alternative",v),e(u,"method","Exact binomial test"),e(u,"print",b),u}export{x as default};
//# sourceMappingURL=index.mjs.map
